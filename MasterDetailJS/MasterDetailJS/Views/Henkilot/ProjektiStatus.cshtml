@{
    ViewBag.Title = "Index";
}
@* HTML *@
<div id="griddata" class="container">

</div>
@* Bootstrap CSS *@
<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" rel="stylesheet" />
@* Jquery *@
<script src="https://code.jquery.com/jquery-2.2.0.min.js"></script>
@* React Library *@
<script src="https://cdnjs.cloudflare.com/ajax/libs/react/0.14.6/react.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/react/0.14.6/react-dom.js"></script>
@* JSX parser library *@
<script src="https://cdnjs.cloudflare.com/ajax/libs/babel-core/5.8.23/browser.min.js"></script>
@* ReactJS components *@
<script type="text/babel">
    @* Here we will create 2 react component 1 for rows and another for table  *@
    var EmployeeGridRow = React.createClass({
    render : function(){
    return (
    <tr>
        <td>{this.props.item.Etunimi}</td>
        <td>{this.props.item.Sukunimi}</td>
        <td>{this.props.item.Osoite}</td>
        <td>{this.props.item.Esimies}</td>
        
    </tr>
    );
    }
    });

    var EmployeeGridTable = React.createClass({
    getInitialState: function(){
    return {
    items:[]
    }
    },
    componentDidMount:function(){
    @* Fetch data via ajax *@
    $.get(this.props.dataUrl, function(data){
    if(this.isMounted()){
    this.setState({
    items: data
    });
    }
    }.bind(this));
    },
    render : function(){
    var rows = [];
    this.state.items.forEach(function(item){
    rows.push(
    <EmployeeGridRow key={item.HenkiloId} item={item} />);
    });
    return (
    <table className="table table-bordered table-responsive">
        <thead>
            <tr>
                <th>Etunimi</th>
                <th>Sukunimi</th>
                <th>Osoite</th>
                <th>Esimies</th>
            </tr>
        </thead>
        <tbody>
            {rows}
        </tbody>
    </table>);
    }
    });
    ReactDOM.render(
    <EmployeeGridTable dataUrl="/home/getEmployeeData" />,
    document.getElementById('griddata')
    );
</script>


@*<!DOCTYPE html>
    <html>
    <head>
        <meta charset="UTF-8" />
        <title>Add React in One Minute</title>
    </head>
    <body>

        <h2>Add React in One Minute</h2>
        <p>This page demonstrates using React with no build tooling.</p>
        <p>React is loaded as a script tag.</p>

        <!-- We will put our React component inside this div. -->
        <div id="like_button_container"></div>

        <!-- Load React. -->
        <!-- Note: when deploying, replace "development.js" with "production.min.js". -->
        <!--<script src="https://unpkg.com/react@16/umd/react.development.js" crossorigin></script>
        <script src="https://unpkg.com/react-dom@16/umd/react-dom.development.js" crossorigin></script>-->
        <script crossorigin src="https://cdnjs.cloudflare.com/ajax/libs/react/16.4.0/umd/react.development.js"></script>
        <script crossorigin src="https://cdnjs.cloudflare.com/ajax/libs/react-dom/16.4.0/umd/react-dom.development.js"></script>

        <!-- Load our React component. -->
        <script src="like_button.js"></script>

    </body>
    </html>

    @{
            Layout = null;
        }
        <html>
        <head>
            <title>Hello React</title>
        </head>
        <body>
            <div id="content"></div>
            <script crossorigin src="https://cdnjs.cloudflare.com/ajax/libs/react/16.4.0/umd/react.development.js"></script>
            <script crossorigin src="https://cdnjs.cloudflare.com/ajax/libs/react-dom/16.4.0/umd/react-dom.development.js"></script>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/remarkable/1.7.1/remarkable.min.js"></script>
            <script src="@Url.Content("~/Scripts/like_button.js")"></script>
        </body>
        </html>*@

@*
    @model IEnumerable<MasterDetailJS.Models.SimplyHenkilotData>

        @{
            ViewBag.Title = "Index";
        }
        @section scripts {
            <head>
                <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.3.1/css/all.css"
                      integrity="sha384-mzrmE5qonljUremFsqc01SB46JvROS7bZs3IO2EmfFsd15uHvIt+Y8vEf7N7fWAU"
                      crossorigin="anonymous">
            </head>
            <script src="~/Scripts/jquery-1.10.2.js"></script>
            <script type="text/javascript">



                $(function () {


                    $(".näytäTunnitPerProjektiNappi").click(function ()
                    {

                        //check the state of plus-sign
                        var plusOn = $(this).hasClass("fa-plus");

                        if (plusOn === true) {


                            //alert("Nappia painettu!");
                            var henkiloId = $(this).data("henkiloid");
                            //var p1 = $(this).parent();
                            //alert(henkiloId);

                            $("#tunnit_" + henkiloId).css("display", "table-row");

                            var url = "/Henkilot/AnnaTunnit/" + henkiloId;
                            //alert (url);
                            var spanElement = this;

                            $.ajax(url).done(function (data) {
                                //alert("Palvelimelta tuli vastaus.");

                                var tunnitData = "";
                                for (var i = 0; i < data.length; i++) {
                                    tunnitData += (i + 1) + ": " + data[i].ProjektiNimi +
                                        " | " + data[i].Pvm + " | " + "Tunti-id:" + data[i].TuntiId + " | " + "Tunnit: " +
                                        data[i].Tunnit1 + " | " + "Projektin status: " + data[i].ProjektiStatus + "\r\n";
                                }

                                //alert(tunnitData);

                                $("#tunnitText_" + henkiloId).html("<pre>" + tunnitData + "</pre>");

                                //after data loading remove plus-sign and add minus-sign
                                $(spanElement).removeClass("fa-plus");
                                $(spanElement).addClass("fa-minus");


                            });
                        }
                        else {
                            //remove minus add plus
                            $(this).removeClass("fa-minus");
                            $(this).addClass("fa-plus");

                            //hide extra rows
                            henkiloId = $(this).data("henkiloid");
                            $("#tunnit_" + henkiloId).css("display", "none");
                        }
                    });
                });

            </script>
        }

        <h2>Henkilöt</h2>

        <p>
            @Html.ActionLink("Lisää uusi", "Create")
        </p>
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.HenkiloId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Etunimi)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Sukunimi)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Osoite)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Esimies)
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>

                        <a href="#"><span data-henkiloid="@Html.DisplayFor(modelItem => item.HenkiloId)" class="fas fa-plus näytäTunnitPerProjektiNappi"></span></a>

                        @Html.DisplayFor(modelItem => item.HenkiloId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Etunimi)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Sukunimi)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Osoite)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Esimies)
                    </td>
                    <td>
                        @Html.ActionLink("Muokkaa", "Edit", new { id = item.HenkiloId }) |
                        @Html.ActionLink("Poista", "Delete", new { id = item.HenkiloId })
                    </td>
                </tr>

                //luodaan alinäkymän tiedot:
                <tr style="display: none;" id="tunnit_@Html.DisplayFor(modelItem => item.HenkiloId)">
                    <td id="margin_@Html.DisplayFor(modelItem => item.HenkiloId)">&nbsp;</td>
                    <td colspan="10" id="tunnitText_@Html.DisplayFor(modelItem => item.HenkiloId)"><pre>Loading...</pre></td>
                </tr>

            }

        </table>
*@